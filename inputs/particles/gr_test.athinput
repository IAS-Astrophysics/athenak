# AthenaXXX input file for random particle drift

<comment>
problem   = GRParticles_Test 

<job>
basename  = gr_particles_test       # problem ID: basename of output filenames

<mesh>
nghost    = 2         # Number of ghost cells
nx1       = 32       # Number of zones in X1-direction
x1max     = 20.0      # maximum value of X1
x1min     = -20.0       # maximum value of X1
ix1_bc    = periodic  # Inner-X1 boundary condition flag
ox1_bc    = periodic  # Outer-X1 boundary condition flag

nx2       = 32       # Number of zones in X2-direction
x2max     = 20.0      # maximum value of X2
x2min     = -20.0       # maximum value of X2
ix2_bc    = periodic  # Inner-X2 boundary condition flag
ox2_bc    = periodic  # Outer-X2 boundary condition flag

nx3       = 32       # Number of zones in X3-direction
x3max     = 20.0      # maximum value of X3
x3min     = -20.0       # maximum value of X3
ix3_bc    = periodic  # Inner-X3 boundary condition flag
ox3_bc    = periodic  # Outer-X3 boundary condition flag

<meshblock>
nx1       = 16       # Number of cells in each MeshBlock, X1-dir
nx2       = 16       # Number of cells in each MeshBlock, X2-dir
nx3       = 16       # Number of cells in each MeshBlock, X3-dir

<mesh_refinement>
refinement = static

<refinement1>
level = 1
x1min = -10.0
x1max = 10.0
x2min = -10.0
x2max = 10.0
x3min = -10.0
x3max = 10.0

<refinement2>
level = 2
x1min = -5.0
x1max = 5.0
x2min = -5.0
x2max = 5.0
x3min = -5.0
x3max = 5.0

<time>
evolution  = dynamic   # dynamic/kinematic/static
integrator = rk2       # time integration algorithm
cfl_number = 0.5      # The Courant, Friedrichs, & Lewy (CFL) Number
nlim       = -1        # cycle limit
tlim       = 100.0      # time limit
ndiag      = 10        # cycles between diagostic output

<coord>
general_rel = true
a = 0.9
excise = true
dexcise = 1.0E-10
pexcise = 1.0E-10

<particles>
ppc    = 0.001
pusher = full_gr
iter_tolerance = 1.0E-8
max_iter = 15
particle_type = cosmic_ray
mass = 1.0E-2
charge = 1.0E+0

<mhd>
eos         = ideal     # EOS type
reconstruct = plm      # spatial reconstruction method
rsolver     = hlle      # Riemann-solver to be used
gamma       = 1.6666667 # gamma = C_p/C_v

<problem>
max_init_vel = 0.5
b0_strength = 0.01

<output1>
file_type   = pvtk      # Particle VTK data dump
variable    = prtcl_all
dt          = 5.0E-1     # time increment between outputs

<output2>
file_type   = bin      # Particle VTK data dump
variable    = mhd_w_bcc
dt          = 5.0E-0     # time increment between outputs
