<comment>
problem = Radiation diffusion test

<job>
basename = diffusion  # name of run

<time>
evolution  = dynamic  # dynamic/kinematic/static
integrator = rk2      # time integration algorithm
cfl_number = 0.8      # The Courant, Friedrichs, & Lewy (CFL) Number
nlim       = -1       # cycle limit
tlim       = 5.0      # time limit

<coord>
general_rel = true    # w/ general relativity
minkowski = true      # Minkowski flag

<mesh>
nghost = 2
nx1    = 256       # Number of zones in X1-direction
x1min  = -1.0      # minimum value of X1
x1max  = 2.0       # maximum value of X1
ix1_bc = periodic  # inner-X1 boundary flag
ox1_bc = periodic  # outer-X1 boundary flag

nx2    = 1         # Number of zones in X2-direction
x2min  = -0.5      # minimum value of X2
x2max  = 0.5       # maximum value of X2
ix2_bc = periodic  # inner-X2 boundary flag
ox2_bc = periodic  # outer-X2 boundary flag

nx3    = 1         # Number of zones in X3-direction
x3min  = -0.5      # minimum value of X3
x3max  = 0.5       # maximum value of X3
ix3_bc = periodic  # inner-X3 boundary flag
ox3_bc = periodic  # outer-X3 boundary flag

<hydro>
eos         = ideal  # EOS type
reconstruct = plm    # spatial reconstruction method
rsolver     = hlle   # Riemann-solver to be used
gamma       = 2.0    # ratio of specific heats Gamma

<radiation>
nlevel = 2               # number of levels for geodesic mesh
fixed_fluid = true       # disable hydro evolution
affect_fluid = false     # coupling to fluid
arad = 1.0               # radiation constant
kappa_s = 100.0          # scattering opacity
kappa_a = 0.0            # absorption opacity
kappa_p = 0.0            # planck minus rosseland opacity

<problem>
v1 = 0.1   # 1-component of 4-velocity (as a fraction of c)
nu = 4.0   # sets width of initial Gaussian: exp(-nusq xsq)

<output1>
file_type   = tab          # output format
variable    = rad_fluid    # choice of variables to output
dt          = 6.0          # output cadence
